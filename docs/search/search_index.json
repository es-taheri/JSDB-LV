{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 JSONDB-LV is an easier way for use JSONDB ( HV / SV ) in different programming languages. By the way currently only PHP language supported in this library. (Other languages will be added soon... Note JSONDB-LV isn't a database. It's an asynchronous library for use and connect to jsondb ( HV / SV ) with only a few lines code. Features \u00b6 Asynchronous Library This library coded very clean and asynchronous for faster calculations Getting started A few lines Send requests to jsondb with only a few lines of code Reference One For All This library supports all functional requests for both JSONDB-HV & JSONDB-SV Customization Open Source, MIT JSONDB-LV is licensed under MIT and also available on GitHub License Why should I use JSONDB-LV? \u00b6 We know that JSONDB supports rest api and web stream socket but we think about it that MYSQL has query too but every developer must write his own library or type each queries in many lines of code. It happens in JSONDB too , We mean that you should write your library or write a many lines of code for sending a request and it maybe make you angry so we developed JSONDB-LV for making your codes free from many lines of code only for sending request to JSONDB-HV/SV. And also we added \u00b6 Some better features in this library for make it more useful See useful features Here you are ready! \u00b6 Let's have some fun with this library Click Here For Getting Started","title":"Home"},{"location":"#home","text":"JSONDB-LV is an easier way for use JSONDB ( HV / SV ) in different programming languages. By the way currently only PHP language supported in this library. (Other languages will be added soon... Note JSONDB-LV isn't a database. It's an asynchronous library for use and connect to jsondb ( HV / SV ) with only a few lines code.","title":"Home"},{"location":"#features","text":"Asynchronous Library This library coded very clean and asynchronous for faster calculations Getting started A few lines Send requests to jsondb with only a few lines of code Reference One For All This library supports all functional requests for both JSONDB-HV & JSONDB-SV Customization Open Source, MIT JSONDB-LV is licensed under MIT and also available on GitHub License","title":"Features"},{"location":"#why-should-i-use-jsondb-lv","text":"We know that JSONDB supports rest api and web stream socket but we think about it that MYSQL has query too but every developer must write his own library or type each queries in many lines of code. It happens in JSONDB too , We mean that you should write your library or write a many lines of code for sending a request and it maybe make you angry so we developed JSONDB-LV for making your codes free from many lines of code only for sending request to JSONDB-HV/SV.","title":"Why should I use JSONDB-LV?"},{"location":"#and-also-we-added","text":"Some better features in this library for make it more useful See useful features","title":"And also we added"},{"location":"#here-you-are-ready","text":"Let's have some fun with this library Click Here For Getting Started","title":"Here you are ready!"},{"location":"getting-started/","text":"Getting Started \u00b6 Getting started with JSONDB LV is so easy. Any methods have the same name like JSONDB server methods and accepts the same parameter like JSONDB server and returned the same server response with three types of response supported We may that you have \u00b6 installed this library before ( Reference ) A ready to use JSONDB server with the following credentials install : Address: jsondb.example.com Port: 443 (default https port) Username : root Password: admin1234 Start with basics \u00b6 Create a connection to server \u00b6 installed manually if installed library manually, Replace line 3 with require 'jsondb/jsondb.class.php'; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <?php //requiring composer autoload require 'vendor/autoload.php' ; //load class from reference use JSONDB\\lib\\connect ; define ( 'SERVER_TYPE' , 'hv' ); define ( 'SERVER_ADDRESS' , 'https://jsondb.example.com' ); define ( 'SERVER_PORT' , '443' ); define ( 'SERVER_USERNAME' , 'root' ); define ( 'SERVER_PASSWORD' , 'admin1234' ); //create connection handler (It will be create connection to server automatically) new connect ( SERVER_TYPE , SERVER_ADDRESS , SERVER_PORT ); Login to server \u00b6 1 2 3 4 5 6 7 8 9 <?php //load class from reference use JSONDB\\request\\user ; //create user handler $user = new user ( SERVER_USERNAME , SERVER_PASSWORD ); //send a login request to server with credentials entered in user handler $user -> login (); build or select database \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 <?php //load class from reference use JSONDB\\request\\database ; //create database handler $db = new database (); //building a database $db -> build ( $name , $maxsize , $maxbase ); //selecting a database builded before (you should have access to database) $db -> select ( $name ); build or select base \u00b6 What is base? It's a part of your database used for separate records like \"table\" in MYSQL 1 2 3 4 5 6 7 8 9 10 11 12 <?php //load class from reference use JSONDB\\request\\base ; //create base handler $db = new base (); //building a base $db -> create ( $name , $maxrecord ); //selecting a base builded before (you should have access to base) $db -> select ( $name ); Records management (Add,Update,Get,...) \u00b6 What is record? All data you save in database will be save in records like \"row\" in MYSQL. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?php //load class from reference use JSONDB\\request\\datacenter ; //create datacenter handler $dc = new datacenter (); //adding a record to selected database and base $dc -> add ( $object , $value ); //receiving data stored in records $dc -> receive ( $object , $where_object , $where_value ); //replacing new data with last data stored in records $dc -> replace ( $object , $value , $where_object , $where_value );","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"Getting started with JSONDB LV is so easy. Any methods have the same name like JSONDB server methods and accepts the same parameter like JSONDB server and returned the same server response with three types of response supported","title":"Getting Started"},{"location":"getting-started/#we-may-that-you-have","text":"installed this library before ( Reference ) A ready to use JSONDB server with the following credentials install : Address: jsondb.example.com Port: 443 (default https port) Username : root Password: admin1234","title":"We may that you have"},{"location":"getting-started/#start-with-basics","text":"","title":"Start with basics"},{"location":"getting-started/#create-a-connection-to-server","text":"installed manually if installed library manually, Replace line 3 with require 'jsondb/jsondb.class.php'; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <?php //requiring composer autoload require 'vendor/autoload.php' ; //load class from reference use JSONDB\\lib\\connect ; define ( 'SERVER_TYPE' , 'hv' ); define ( 'SERVER_ADDRESS' , 'https://jsondb.example.com' ); define ( 'SERVER_PORT' , '443' ); define ( 'SERVER_USERNAME' , 'root' ); define ( 'SERVER_PASSWORD' , 'admin1234' ); //create connection handler (It will be create connection to server automatically) new connect ( SERVER_TYPE , SERVER_ADDRESS , SERVER_PORT );","title":"Create a connection to server"},{"location":"getting-started/#login-to-server","text":"1 2 3 4 5 6 7 8 9 <?php //load class from reference use JSONDB\\request\\user ; //create user handler $user = new user ( SERVER_USERNAME , SERVER_PASSWORD ); //send a login request to server with credentials entered in user handler $user -> login ();","title":"Login to server"},{"location":"getting-started/#build-or-select-database","text":"1 2 3 4 5 6 7 8 9 10 11 12 <?php //load class from reference use JSONDB\\request\\database ; //create database handler $db = new database (); //building a database $db -> build ( $name , $maxsize , $maxbase ); //selecting a database builded before (you should have access to database) $db -> select ( $name );","title":"build or select database"},{"location":"getting-started/#build-or-select-base","text":"What is base? It's a part of your database used for separate records like \"table\" in MYSQL 1 2 3 4 5 6 7 8 9 10 11 12 <?php //load class from reference use JSONDB\\request\\base ; //create base handler $db = new base (); //building a base $db -> create ( $name , $maxrecord ); //selecting a base builded before (you should have access to base) $db -> select ( $name );","title":"build or select base"},{"location":"getting-started/#records-management-addupdateget","text":"What is record? All data you save in database will be save in records like \"row\" in MYSQL. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?php //load class from reference use JSONDB\\request\\datacenter ; //create datacenter handler $dc = new datacenter (); //adding a record to selected database and base $dc -> add ( $object , $value ); //receiving data stored in records $dc -> receive ( $object , $where_object , $where_value ); //replacing new data with last data stored in records $dc -> replace ( $object , $value , $where_object , $where_value );","title":"Records management (Add,Update,Get,...)"}]}